// import React from 'react';
import './CountryPage.css';
// import PaymentAlert from "./PaymentAlert.jsx";
import axios from "axios";
import {useState} from "react";

function CountryPage() {

    // const [countries, setCountries] = useState([]);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ POST-–∑–∞–ø—Ä–æ—Å–∞
    // const fetchData = async () => {
    //     try {
    //         const response = await fetch('your-api-endpoint', {
    //             method: 'POST',
    //             headers: {
    //                 'Content-Type': 'application/json',
    //             },
    //             body: JSON.stringify({ /* –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ */ }),
    //         });
    //         const result = await response.json();
    //         // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –æ–±—ä–µ–∫—Ç–æ–º: { 'Finland', 'Bulgaria', 'Finland 2' }
    //         setCountries(result); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–∞–Ω—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    //     } catch (error) {
    //         console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    //     }
    // };

    const site = 'https://test.root-vpn.ru'

    const [isSuccess, setIsSuccess] = useState(false);
    const [hasError, setHasError] = useState(false);  // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
    const [selectedCountry, setSelectedCountry] = useState(''); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω—É

    const sendCountry = (country) => {
        const telegram = window.Telegram.WebApp;
        const user = telegram.initDataUnsafe?.user;

        if (!user || !user.id) {
            console.error('User or user ID is not available.');
            return;
        }

        axios.post(`${site}/changecountry`, { 'user_id': user.id, 'country': country })
            .then((response) => {
                console.log('response ', response)
                if (response.status === 200) {
                    setIsSuccess(true);
                    setHasError(false);
                    setSelectedCountry(country);
                } else {
                    setIsSuccess(false);
                    setHasError(true);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                setIsSuccess(false);
                setHasError(true);
            });

        // return (
        //     <div>
        //         {isSuccess ? (
        //             <div className="success-container">
        //                 <h1 className="change-country-succes">–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {country}</h1>
        //             </div>
        //         ) : (
        //             <div className="error-container">
        //                 <h1 className="change-country-error">–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω—ã</h1>
        //             </div>
        //         )}
        //     </div>
        // );
    }

    return (
        <div className="change-country-container">
            <main className="Country-change-button">
                <button onClick={() => sendCountry('fast')}>
                    üá´üáÆ –§–∏–Ω–ª—è–Ω–¥–∏—è
                </button>
                <button onClick={() => sendCountry('no_ads')}>
                    üáßüá¨ –ë–æ–ª–≥–∞—Ä–∏—è
                </button>
                <button onClick={() => sendCountry('no_ads_185')}>
                    üá´üáÆ –§–∏–Ω–ª—è–Ω–¥–∏—è (—Ä–µ–∑–µ—Ä–≤)
                </button>
            </main>
            {/* –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞ */}
            {isSuccess && (
                // <div className="success-container">
                <h1 className="change-country-success">–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {selectedCountry}</h1>
                // </div>
            )}

            {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
            {hasError && (
                // <div className="error-container">
                <h1 className="change-country-error">–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω—ã</h1>
                // </div>
            )}
        </div>
    );
}

export default CountryPage;
